var express = require('express'),
    Requests = require('./lib/requests'),
    config = require('./config');

var router = express.Router();

var routes = {
  user: function(req, res) {
    if (req.session) {
      return res.status(200).json(req.session.user);
    } else {
      return res.status(404);
    }
  },

  loginCallback: function(req, res) {
    Requests.validateToken(req.query.token, function(err, response, authResponse) {
      if (err) { return res.redirect(config.urls.app.loginError) };

      if (authResponse.error) {
        var redirectUrl = req.protocol + '://' + req.get('Host') + config.urls.app.loginCallback;
        return res.redirect(config.auth.host + config.urls.auth.login + '?redirect_url=' + redirectUrl);
      } else {
        req.session.token = authResponse.extra.token;
        req.session.user = authResponse;
        return res.redirect(req.session.requestedUrl);
      }
    });
  },

  logout: function(req, res) {
    if (req.session) {
      req.session.destroy();
    }
    return res.redirect(config.auth.host + config.urls.auth.logout + '?redirect_url=' + req.protocol + '://' + req.get('Host'));
  }
};

router.get(config.urls.app.user,           routes.user);
router.get(config.urls.app.loginCallback,  routes.loginCallback);
router.get(config.urls.app.logout,         routes.logout);
router.get(config.urls.app.loginError,     config.loginErrorHandler);

exports = module.exports = router;
