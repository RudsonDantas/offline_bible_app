exports = module.exports = {
  /*
  * Store config variables
  * @param {Object} config
  *
  * Object breakdown
  * @param {String} config.authURL required
  * @param {String} config.loginErrorHandler optional
  * @param {String} config.unprotectedUrls optional
  *
  */
  store: function(options) {
    this.auth.host = options.auth.host;

    if (options.loginErrorHandler !== undefined) {
      this.loginErrorHandler = options.loginErrorHandler;
    }

    if (options.api) {
      this.api = options.api;
    }

    this.unprotectedUrls = (options.unprotectedUrls === undefined ? [] : options.unprotectedUrls).concat(this.unprotectedUrls);
  },

  // Default login error route
  loginErrorHandler: function(req, res, next) {
    return res.status(401).json({error: 'Cannot authenticate at this time'});
  },

  // Auth URL
  auth: {
    host: null
  },

  // API options
  api: {
    url: '/api'
  },

  // Default unprotected URLs
  unprotectedUrls: [
    '/auth/loginError',
    '/auth/loginCallback'
  ],

  // Default urls
  urls: {
    auth: {
      login: '/auth/login',
      logout: '/auth/logout',
      validate: '/auth/validate'
    },

    app: {
      user: '/auth/user',
      loginCallback: '/auth/loginCallback',
      logout: '/auth/logout',
      loginError: '/auth/loginError'
    }
  }
}
