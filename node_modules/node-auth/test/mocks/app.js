var express = require('express'),
    session = require('express-session'),
    config = require('../../config'),
    authFixtures = require('../fixtures/auth_fixture'),
    auth = require('../../index');

var authOptions = {
  host: process.env.AUTH_HOST
};

var unprotectedUrls = [
  '/free',
  config.api.url + '/free'
];

var apps = {
  standard: function(){
    var app = express();

    mw = auth({
      auth: authOptions,
      unprotectedUrls: unprotectedUrls
    });

    app
      .use('/api', mw.api)
      .use(/^\/(?!api(\/|$)).*$/, mw.app)
      .use(mw.routes)

    attachRoutes(app);

    return app;
  },

  session: function() {
    var app = express();

    mw = auth({
      auth: authOptions,
      unprotectedUrls: unprotectedUrls
    });

    app
      .use(session({
        secret: 'authiscool',
        resave: true,
        saveUninitialized: true
      }))
      .use('/api', mw.api)
      .use(/^\/(?!api(\/|$)).*$/, mw.app)
      .use(mw.routes)

    attachRoutes(app);

    return app;
  },

  sessionLoggedIn: function() {
    var app = express();

    mw = auth({
      auth: authOptions,
      unprotectedUrls: unprotectedUrls
    });

    app
      .use(session({
        secret: 'authiscool',
        resave: true,
        saveUninitialized: true
      }))
      .use(function(req, res, next){req.session.token = '123'; req.session.user = authFixtures.validateTokenResponse; next();})
      .use('/api', mw.api)
      .use(/^\/(?!api(\/|$)).*$/, mw.app)
      .use(mw.routes)

    attachRoutes(app);

    return app;
  },

  sessionWithRequestedUrl: function() {
    var app = express();

    mw = auth({
      auth: authOptions,
      unprotectedUrls: unprotectedUrls
    });

    app
      .use(session({
        secret: 'authiscool',
        resave: true,
        saveUninitialized: true
      }))
      .use(function(req, res, next){req.session.requestedUrl = '/request'; next();})
      .use('/api', mw.api)
      .use(/^\/(?!api(\/|$)).*$/, mw.app)
      .use(mw.routes)

    attachRoutes(app);

    return app;
  }
}

function attachRoutes(app){
  app
    .get('/', function(req, res){ return res.sendStatus(200)})
    .get('/fake', function(req, res){ return res.sendStatus(200)})
    .get('/free', function(req, res){ return res.sendStatus(200)})
    .get(config.api.url, function(req, res){ return res.sendStatus(200)})
    .get(config.api.url + '/fake', function(req, res){ return res.sendStatus(200)})
    .get(config.api.url + '/free', function(req, res){ return res.sendStatus(200)})
};

exports = module.exports = apps;
